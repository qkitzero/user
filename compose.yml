services:
  user-server:
    build:
      context: .
      dockerfile: ./build/user/Dockerfile
    container_name: user-server
    restart: always
    environment:
      - PORT=${SERVER_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
    depends_on:
      user-db:
        condition: service_healthy
    ports:
      - "${SERVER_EXTERNAL_PORT}:${SERVER_PORT}"
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=localhost:${SERVER_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  user-db:
    image: mysql:8.0
    container_name: user-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_EXTERNAL_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - user-db-data:/var/lib/mysql

  protoc:
    build:
      context: .
      dockerfile: ./build/protoc/Dockerfile
    volumes:
      - .:/work
    command: /bin/sh -c "protoc --go_out=. --go-grpc_out=. ./proto/*.proto"

volumes:
  user-db-data: